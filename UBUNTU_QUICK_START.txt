================================================================================
       WEATHERALERT - UBUNTU SERVER DEPLOYMENT QUICK START
================================================================================

APPLICATION URL: http://119.93.148.180/weatherapp
SERVER OS:       Ubuntu 20.04/22.04 LTS
DEPLOYMENT:      Automated with scripts

================================================================================
                         DEPLOYMENT OPTIONS
================================================================================

OPTION 1: AUTOMATED (WINDOWS POWERSHELL) ⭐ RECOMMENDED
------------------------------------------------------------------------
1. Open PowerShell on your Windows machine:
   cd "C:\Users\JaOsn\Desktop\BCC PythonApps\weatherapp"

2. Run deployment script:
   Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
   .\deploy_scripts\windows_deploy.ps1

3. Select Option 1 for first-time deployment

⏱️ Time: 10-20 minutes
✅ Fully automated
✅ No Linux knowledge required


OPTION 2: MANUAL (SSH TO UBUNTU SERVER)
------------------------------------------------------------------------
From Windows PowerShell:

1. Transfer deployment script:
   scp deploy_scripts/deploy_to_server.sh root@119.93.148.180:/tmp/

2. SSH to Ubuntu server:
   ssh root@119.93.148.180

3. Run deployment:
   chmod +x /tmp/deploy_to_server.sh
   /tmp/deploy_to_server.sh

⏱️ Time: 10-20 minutes
✅ Full control over process
✅ See detailed progress


================================================================================
                    WHAT GETS INSTALLED ON UBUNTU
================================================================================

System Packages:
  ✓ Python 3.8+
  ✓ Nginx web server
  ✓ Redis message broker
  ✓ Build tools & libraries
  ✓ MySQL client libraries

Python Environment:
  ✓ Virtual environment at /opt/django-apps/weatherapp/venv
  ✓ Django 4.1.13
  ✓ Gunicorn WSGI server
  ✓ Celery task queue
  ✓ All app dependencies

Services Created:
  ✓ django-weatherapp.service   - Main application
  ✓ celery-weatherapp.service   - Background tasks
  ✓ celerybeat-weatherapp.service - Scheduled tasks
  ✓ nginx                        - Web server
  ✓ redis-server                 - Message broker

Monitoring:
  ✓ Automated health checks (every 5 minutes)
  ✓ Log rotation
  ✓ Backup cron job (daily 2 AM)
  ✓ System resource monitoring


================================================================================
                    UBUNTU SERVER ARCHITECTURE
================================================================================

Internet (Port 80)
        ↓
    [Nginx]  ← Reverse proxy, static files, security
        ↓
  [Gunicorn] ← WSGI server (Port 8001, internal)
        ↓
   [Django]  ← Your WeatherAlert application
     ↙   ↘
[MySQL]  [Celery + Redis] ← Database & background tasks


================================================================================
                    UBUNTU SERVICE MANAGEMENT
================================================================================

Using Management Script (Easy):
--------------------------------
ssh root@119.93.148.180
weatherapp-manage.sh status      # Check all services
weatherapp-manage.sh restart     # Restart everything
weatherapp-manage.sh logs        # View logs
weatherapp-manage.sh backup      # Create backup
weatherapp-manage.sh update      # Update application

Using systemctl (Direct):
--------------------------------
systemctl status django-weatherapp    # Check Django service
systemctl restart django-weatherapp   # Restart Django
systemctl restart celery-weatherapp   # Restart Celery
systemctl restart nginx               # Restart Nginx

View Logs:
--------------------------------
tail -f /var/log/django-apps/weatherapp/error.log    # Django logs
tail -f /var/log/django-apps/weatherapp/celery.log   # Celery logs
journalctl -u django-weatherapp -f                   # System logs


================================================================================
                    DIRECTORY STRUCTURE ON UBUNTU
================================================================================

/opt/django-apps/weatherapp/
├── weatheralert/           # Django project
├── weatherapp/             # Main application
├── venv/                   # Python virtual environment
├── staticfiles/            # Collected static files
├── media/                  # User uploads
├── manage.py
├── requirements.txt
└── .env                    # Configuration

/var/log/django-apps/weatherapp/
├── error.log               # Application errors
├── access.log              # Access logs
├── celery.log              # Background tasks
└── monitor.log             # Health checks

/etc/nginx/sites-available/
└── weatherapp              # Nginx configuration

/etc/systemd/system/
├── django-weatherapp.service
├── celery-weatherapp.service
└── celerybeat-weatherapp.service


================================================================================
                    UPDATING ON UBUNTU SERVER
================================================================================

Method 1: From Windows (PowerShell)
------------------------------------
.\deploy_scripts\windows_deploy.ps1
Select Option 2 (Quick update)

⏱️ Time: 2-5 minutes

Method 2: Directly on Ubuntu
------------------------------------
ssh root@119.93.148.180
weatherapp-manage.sh update

⏱️ Time: 2-5 minutes


================================================================================
                    UBUNTU TROUBLESHOOTING
================================================================================

App not loading?
----------------
ssh root@119.93.148.180
weatherapp-manage.sh status       # Check services
weatherapp-manage.sh logs         # View errors
weatherapp-manage.sh restart      # Restart all

Static files missing?
----------------
ssh root@119.93.148.180
cd /opt/django-apps/weatherapp
source venv/bin/activate
python manage.py collectstatic --noinput
systemctl restart nginx

Service won't start?
----------------
journalctl -u django-weatherapp -n 50    # View error logs
systemctl status django-weatherapp       # Check status
chown -R django-weatherapp:django-weatherapp /opt/django-apps/weatherapp

Port 80 in use?
----------------
sudo netstat -tlnp | grep :80      # Check what's using it
systemctl stop apache2             # If Apache is running
systemctl start nginx              # Start Nginx


================================================================================
                    UBUNTU SECURITY CHECKLIST
================================================================================

✓ Firewall (UFW):
  ufw allow 22/tcp    # SSH
  ufw allow 80/tcp    # HTTP
  ufw allow 443/tcp   # HTTPS
  ufw enable

✓ Fail2Ban (Brute force protection):
  apt install fail2ban -y
  systemctl enable fail2ban

✓ Automatic Updates:
  apt install unattended-upgrades -y

✓ SSH Hardening:
  nano /etc/ssh/sshd_config
  # Disable root login after creating sudo user
  # Use SSH keys instead of passwords

✓ SSL/HTTPS (Optional):
  apt install certbot python3-certbot-nginx
  # Requires domain name


================================================================================
                    VERIFICATION ON UBUNTU
================================================================================

After deployment, verify everything works:

1. SSH to server:
   ssh root@119.93.148.180

2. Run verification:
   bash /tmp/verify_deployment.sh

3. Check results (20 automated tests):
   ✓ Services running
   ✓ Ports open
   ✓ Database connected
   ✓ Static files accessible
   ✓ Application responding
   ✓ Logs created
   ✓ And more...

4. Access application:
   http://119.93.148.180/weatherapp


================================================================================
                    UBUNTU BACKUP & RECOVERY
================================================================================

Automatic Backups:
------------------
✓ Daily backups at 2 AM (via cron)
✓ Stored at: /opt/backups/weatherapp/
✓ Retention: 7 days (configurable)

Manual Backup:
------------------
ssh root@119.93.148.180
weatherapp-manage.sh backup

Restore from Backup:
------------------
ssh root@119.93.148.180
systemctl stop django-weatherapp celery-weatherapp celerybeat-weatherapp
cd /opt/django-apps
tar -xzf /opt/backups/weatherapp/backup_YYYYMMDD_HHMMSS.tar.gz
chown -R django-weatherapp:django-weatherapp weatherapp
systemctl start django-weatherapp celery-weatherapp celerybeat-weatherapp


================================================================================
                    FILES CREATED FOR UBUNTU
================================================================================

✅ deploy_scripts/deploy_to_server.sh       - Full Ubuntu deployment
✅ deploy_scripts/quick_deploy_to_server.sh - Quick updates
✅ deploy_scripts/verify_deployment.sh      - Post-deployment tests
✅ deploy_scripts/windows_deploy.ps1        - Windows helper script
✅ deploy_scripts/windows_deploy.bat        - Windows batch file
✅ deploy_scripts/UBUNTU_DEPLOYMENT.md      - Complete Ubuntu guide
✅ weatheralert/settings_production.py      - Production settings
✅ requirements_production.txt              - Production dependencies
✅ DEPLOYMENT_INSTRUCTIONS.md               - General guide
✅ README_QUICK_DEPLOY.md                   - Quick reference


================================================================================
                    IMPORTANT UBUNTU COMMANDS
================================================================================

Service Status:
---------------
systemctl status django-weatherapp
systemctl status celery-weatherapp
systemctl status nginx
systemctl status redis-server

Start Services:
---------------
systemctl start django-weatherapp
systemctl start celery-weatherapp
systemctl start nginx

Stop Services:
---------------
systemctl stop django-weatherapp
systemctl stop celery-weatherapp

Restart Services:
---------------
systemctl restart django-weatherapp
systemctl restart nginx

Enable Auto-start:
---------------
systemctl enable django-weatherapp
systemctl enable celery-weatherapp
systemctl enable nginx

View Logs:
---------------
tail -f /var/log/django-apps/weatherapp/error.log
journalctl -u django-weatherapp -f
journalctl -u django-weatherapp -n 100

System Info:
---------------
lsb_release -a        # Ubuntu version
free -h               # Memory
df -h                 # Disk space
htop                  # Resource monitor
uname -r              # Kernel version


================================================================================
                    UBUNTU PERFORMANCE TUNING
================================================================================

Gunicorn Workers:
-----------------
# Calculate: (CPU cores × 2) + 1
nproc  # Check CPU cores
nano /etc/systemd/system/django-weatherapp.service
# Edit --workers value
systemctl daemon-reload
systemctl restart django-weatherapp

Nginx Optimization:
-----------------
nano /etc/nginx/nginx.conf
# Adjust worker_processes and worker_connections
nginx -t
systemctl reload nginx

Redis Memory:
-----------------
nano /etc/redis/redis.conf
# Set maxmemory and maxmemory-policy
systemctl restart redis-server


================================================================================
                    POST-DEPLOYMENT STEPS
================================================================================

1. ✅ Deploy application (follow options above)

2. ✅ Access application:
   http://119.93.148.180/weatherapp

3. ⬜ Create admin user:
   ssh root@119.93.148.180
   cd /opt/django-apps/weatherapp
   source venv/bin/activate
   python manage.py createsuperuser

4. ⬜ Access admin panel:
   http://119.93.148.180/weatherapp/admin

5. ⬜ Configure firewall (see security checklist)

6. ⬜ Setup SSL (optional, requires domain)

7. ⬜ Test backups

8. ⬜ Monitor logs daily


================================================================================
                    SUPPORT & DOCUMENTATION
================================================================================

Detailed Guides:
----------------
• deploy_scripts/UBUNTU_DEPLOYMENT.md      - Complete Ubuntu guide
• DEPLOYMENT_INSTRUCTIONS.md               - Step-by-step guide
• deploy_scripts/README_SERVER_DEPLOYMENT.md - Server operations
• deploy_scripts/DEPLOYMENT_SUMMARY.md     - Technical reference

Quick Start:
----------------
• README_QUICK_DEPLOY.md                   - This file
• UBUNTU_QUICK_START.txt                   - Quick reference


================================================================================
                    READY TO DEPLOY?
================================================================================

EASIEST WAY (Windows PowerShell):
----------------------------------
PS> .\deploy_scripts\windows_deploy.ps1

DIRECT UBUNTU (SSH):
----------------------------------
$ ssh root@119.93.148.180
$ chmod +x /tmp/deploy_to_server.sh
$ /tmp/deploy_to_server.sh

YOUR APP WILL BE AT:
----------------------------------
http://119.93.148.180/weatherapp

GOOD LUCK! 🚀


================================================================================
                    DEPLOYMENT SUMMARY
================================================================================

✅ All scripts optimized for Ubuntu Linux
✅ Automated installation of all dependencies
✅ Systemd services for automatic startup
✅ Nginx configured for /weatherapp subpath
✅ Redis message broker setup
✅ Automated monitoring and backups
✅ Security best practices included
✅ Easy management with weatherapp-manage.sh
✅ Complete documentation provided
✅ Verification tests included

Everything is ready for your Ubuntu server deployment!

================================================================================

